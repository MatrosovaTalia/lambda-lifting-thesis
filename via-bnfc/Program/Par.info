-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Program/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pRoutineDecl -> RoutineDecl                 (1)
	%start_pListDecl -> ListDecl                       (2)
	%start_pListExpr -> ListExpr                       (3)
	%start_pListIdent -> ListIdent                     (4)
	%start_pDecl -> Decl                               (5)
	%start_pStatement -> Statement                     (6)
	%start_pExpr3 -> Expr3                             (7)
	%start_pExpr2 -> Expr2                             (8)
	%start_pExpr1 -> Expr1                             (9)
	%start_pExpr -> Expr                               (10)
	%start_pExpr4 -> Expr4                             (11)
	Ident -> L_Ident                                   (12)
	Integer -> L_integ                                 (13)
	Program -> ListDecl                                (14)
	RoutineDecl -> 'def' Ident '(' ListIdent ')' ':' '{' ListDecl '}'   (15)
	ListDecl ->                                        (16)
	ListDecl -> Decl                                   (17)
	ListDecl -> Decl ';' ListDecl                      (18)
	ListExpr ->                                        (19)
	ListExpr -> Expr                                   (20)
	ListExpr -> Expr ',' ListExpr                      (21)
	ListIdent ->                                       (22)
	ListIdent -> Ident                                 (23)
	ListIdent -> Ident ',' ListIdent                   (24)
	Decl -> 'return' Expr                              (25)
	Decl -> Statement                                  (26)
	Decl -> RoutineDecl                                (27)
	Statement -> Ident '=' Expr                        (28)
	Statement -> Ident '(' ListExpr ')'                (29)
	Statement -> 'while' '(' Expr ')' ':' '{' ListDecl '}'   (30)
	Statement -> 'for' '(' Ident 'in' 'range' '(' Expr ',' Expr ')' ')' ':' '{' ListDecl '}'   (31)
	Statement -> 'if' '(' Expr ')' ':' '{' ListDecl '}'   (32)
	Statement -> 'if' '(' Expr ')' ':' '{' ListDecl '}' 'else' ':' '{' ListDecl '}'   (33)
	Expr3 -> Integer                                   (34)
	Expr3 -> Ident                                     (35)
	Expr3 -> 'not' Expr4                               (36)
	Expr3 -> '(' Expr ')'                              (37)
	Expr2 -> Expr2 '*' Expr3                           (38)
	Expr2 -> Expr2 '/' Expr3                           (39)
	Expr2 -> Expr2 '%' Expr3                           (40)
	Expr2 -> Expr3                                     (41)
	Expr1 -> Expr1 '+' Expr2                           (42)
	Expr1 -> Expr1 '-' Expr2                           (43)
	Expr1 -> Expr2                                     (44)
	Expr -> Expr 'and' Expr1                           (45)
	Expr -> Expr 'or' Expr1                            (46)
	Expr -> Expr 'xor' Expr1                           (47)
	Expr -> Expr1                                      (48)
	Expr4 -> Expr3                                     (49)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'%'            { PT _ (TS _ 1) }
	'('            { PT _ (TS _ 2) }
	')'            { PT _ (TS _ 3) }
	'*'            { PT _ (TS _ 4) }
	'+'            { PT _ (TS _ 5) }
	','            { PT _ (TS _ 6) }
	'-'            { PT _ (TS _ 7) }
	'/'            { PT _ (TS _ 8) }
	':'            { PT _ (TS _ 9) }
	';'            { PT _ (TS _ 10) }
	'='            { PT _ (TS _ 11) }
	'and'          { PT _ (TS _ 12) }
	'def'          { PT _ (TS _ 13) }
	'else'         { PT _ (TS _ 14) }
	'for'          { PT _ (TS _ 15) }
	'if'           { PT _ (TS _ 16) }
	'in'           { PT _ (TS _ 17) }
	'not'          { PT _ (TS _ 18) }
	'or'           { PT _ (TS _ 19) }
	'range'        { PT _ (TS _ 20) }
	'return'       { PT _ (TS _ 21) }
	'while'        { PT _ (TS _ 22) }
	'xor'          { PT _ (TS _ 23) }
	'{'            { PT _ (TS _ 24) }
	'}'            { PT _ (TS _ 25) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pRoutineDecl rule  1
	%start_pListDecl rule  2
	%start_pListExpr rule  3
	%start_pListIdent rule  4
	%start_pDecl    rule  5
	%start_pStatement rule  6
	%start_pExpr3   rule  7
	%start_pExpr2   rule  8
	%start_pExpr1   rule  9
	%start_pExpr    rule  10
	%start_pExpr4   rule  11
	Ident           rule  12
	Integer         rule  13
	Program         rule  14
	RoutineDecl     rule  15
	ListDecl        rules 16, 17, 18
	ListExpr        rules 19, 20, 21
	ListIdent       rules 22, 23, 24
	Decl            rules 25, 26, 27
	Statement       rules 28, 29, 30, 31, 32, 33
	Expr3           rules 34, 35, 36, 37
	Expr2           rules 38, 39, 40, 41
	Expr1           rules 42, 43, 44
	Expr            rules 45, 46, 47, 48
	Expr4           rule  49

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'def'          shift, and enter state 36
	'for'          shift, and enter state 30
	'if'           shift, and enter state 31
	'return'       shift, and enter state 37
	'while'        shift, and enter state 32
	L_Ident        shift, and enter state 13
	%eof           reduce using rule 16

	Ident          goto state 28
	Program        goto state 45
	RoutineDecl    goto state 33
	ListDecl       goto state 46
	Decl           goto state 43
	Statement      goto state 35

State 1

	%start_pRoutineDecl -> . RoutineDecl                (rule 1)

	'def'          shift, and enter state 36

	RoutineDecl    goto state 44

State 2

	%start_pListDecl -> . ListDecl                      (rule 2)

	'def'          shift, and enter state 36
	'for'          shift, and enter state 30
	'if'           shift, and enter state 31
	'return'       shift, and enter state 37
	'while'        shift, and enter state 32
	L_Ident        shift, and enter state 13
	%eof           reduce using rule 16

	Ident          goto state 28
	RoutineDecl    goto state 33
	ListDecl       goto state 42
	Decl           goto state 43
	Statement      goto state 35

State 3

	%start_pListExpr -> . ListExpr                      (rule 3)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20
	%eof           reduce using rule 19

	Ident          goto state 14
	Integer        goto state 15
	ListExpr       goto state 40
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 41

State 4

	%start_pListIdent -> . ListIdent                    (rule 4)

	L_Ident        shift, and enter state 13
	%eof           reduce using rule 22

	Ident          goto state 38
	ListIdent      goto state 39

State 5

	%start_pDecl -> . Decl                              (rule 5)

	'def'          shift, and enter state 36
	'for'          shift, and enter state 30
	'if'           shift, and enter state 31
	'return'       shift, and enter state 37
	'while'        shift, and enter state 32
	L_Ident        shift, and enter state 13

	Ident          goto state 28
	RoutineDecl    goto state 33
	Decl           goto state 34
	Statement      goto state 35

State 6

	%start_pStatement -> . Statement                    (rule 6)

	'for'          shift, and enter state 30
	'if'           shift, and enter state 31
	'while'        shift, and enter state 32
	L_Ident        shift, and enter state 13

	Ident          goto state 28
	Statement      goto state 29

State 7

	%start_pExpr3 -> . Expr3                            (rule 7)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 27

State 8

	%start_pExpr2 -> . Expr2                            (rule 8)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 21
	Expr2          goto state 26

State 9

	%start_pExpr1 -> . Expr1                            (rule 9)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 25

State 10

	%start_pExpr -> . Expr                              (rule 10)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 24

State 11

	%start_pExpr4 -> . Expr4                            (rule 11)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 16
	Expr4          goto state 17

State 12

	Ident -> . L_Ident                                  (rule 12)

	L_Ident        shift, and enter state 13


State 13

	Ident -> L_Ident .                                  (rule 12)

	'%'            reduce using rule 12
	'('            reduce using rule 12
	')'            reduce using rule 12
	'*'            reduce using rule 12
	'+'            reduce using rule 12
	','            reduce using rule 12
	'-'            reduce using rule 12
	'/'            reduce using rule 12
	';'            reduce using rule 12
	'='            reduce using rule 12
	'and'          reduce using rule 12
	'in'           reduce using rule 12
	'or'           reduce using rule 12
	'xor'          reduce using rule 12
	'}'            reduce using rule 12
	%eof           reduce using rule 12


State 14

	Expr3 -> Ident .                                    (rule 35)

	'%'            reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	';'            reduce using rule 35
	'and'          reduce using rule 35
	'or'           reduce using rule 35
	'xor'          reduce using rule 35
	'}'            reduce using rule 35
	%eof           reduce using rule 35


State 15

	Expr3 -> Integer .                                  (rule 34)

	'%'            reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	';'            reduce using rule 34
	'and'          reduce using rule 34
	'or'           reduce using rule 34
	'xor'          reduce using rule 34
	'}'            reduce using rule 34
	%eof           reduce using rule 34


State 16

	Expr4 -> Expr3 .                                    (rule 49)

	'%'            reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'and'          reduce using rule 49
	'or'           reduce using rule 49
	'xor'          reduce using rule 49
	'}'            reduce using rule 49
	%eof           reduce using rule 49


State 17

	%start_pExpr4 -> Expr4 .                            (rule 11)

	%eof           accept


State 18

	Expr3 -> '(' . Expr ')'                             (rule 37)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 66

State 19

	Expr3 -> 'not' . Expr4                              (rule 36)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 16
	Expr4          goto state 65

State 20

	Integer -> L_integ .                                (rule 13)

	'%'            reduce using rule 13
	')'            reduce using rule 13
	'*'            reduce using rule 13
	'+'            reduce using rule 13
	','            reduce using rule 13
	'-'            reduce using rule 13
	'/'            reduce using rule 13
	';'            reduce using rule 13
	'and'          reduce using rule 13
	'or'           reduce using rule 13
	'xor'          reduce using rule 13
	'}'            reduce using rule 13
	%eof           reduce using rule 13


State 21

	Expr2 -> Expr3 .                                    (rule 41)

	'%'            reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'and'          reduce using rule 41
	'or'           reduce using rule 41
	'xor'          reduce using rule 41
	'}'            reduce using rule 41
	%eof           reduce using rule 41


State 22

	Expr2 -> Expr2 . '*' Expr3                          (rule 38)
	Expr2 -> Expr2 . '/' Expr3                          (rule 39)
	Expr2 -> Expr2 . '%' Expr3                          (rule 40)
	Expr1 -> Expr2 .                                    (rule 44)

	'%'            shift, and enter state 60
	')'            reduce using rule 44
	'*'            shift, and enter state 61
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            shift, and enter state 62
	';'            reduce using rule 44
	'and'          reduce using rule 44
	'or'           reduce using rule 44
	'xor'          reduce using rule 44
	'}'            reduce using rule 44
	%eof           reduce using rule 44


State 23

	Expr1 -> Expr1 . '+' Expr2                          (rule 42)
	Expr1 -> Expr1 . '-' Expr2                          (rule 43)
	Expr -> Expr1 .                                     (rule 48)

	')'            reduce using rule 48
	'+'            shift, and enter state 63
	','            reduce using rule 48
	'-'            shift, and enter state 64
	';'            reduce using rule 48
	'and'          reduce using rule 48
	'or'           reduce using rule 48
	'xor'          reduce using rule 48
	'}'            reduce using rule 48
	%eof           reduce using rule 48


State 24

	%start_pExpr -> Expr .                              (rule 10)
	Expr -> Expr . 'and' Expr1                          (rule 45)
	Expr -> Expr . 'or' Expr1                           (rule 46)
	Expr -> Expr . 'xor' Expr1                          (rule 47)

	'and'          shift, and enter state 49
	'or'           shift, and enter state 50
	'xor'          shift, and enter state 51
	%eof           accept


State 25

	%start_pExpr1 -> Expr1 .                            (rule 9)
	Expr1 -> Expr1 . '+' Expr2                          (rule 42)
	Expr1 -> Expr1 . '-' Expr2                          (rule 43)

	'+'            shift, and enter state 63
	'-'            shift, and enter state 64
	%eof           accept


State 26

	%start_pExpr2 -> Expr2 .                            (rule 8)
	Expr2 -> Expr2 . '*' Expr3                          (rule 38)
	Expr2 -> Expr2 . '/' Expr3                          (rule 39)
	Expr2 -> Expr2 . '%' Expr3                          (rule 40)

	'%'            shift, and enter state 60
	'*'            shift, and enter state 61
	'/'            shift, and enter state 62
	%eof           accept


State 27

	%start_pExpr3 -> Expr3 .                            (rule 7)

	%eof           accept


State 28

	Statement -> Ident . '=' Expr                       (rule 28)
	Statement -> Ident . '(' ListExpr ')'               (rule 29)

	'('            shift, and enter state 58
	'='            shift, and enter state 59


State 29

	%start_pStatement -> Statement .                    (rule 6)

	%eof           accept


State 30

	Statement -> 'for' . '(' Ident 'in' 'range' '(' Expr ',' Expr ')' ')' ':' '{' ListDecl '}'    (rule 31)

	'('            shift, and enter state 57


State 31

	Statement -> 'if' . '(' Expr ')' ':' '{' ListDecl '}'    (rule 32)
	Statement -> 'if' . '(' Expr ')' ':' '{' ListDecl '}' 'else' ':' '{' ListDecl '}'    (rule 33)

	'('            shift, and enter state 56


State 32

	Statement -> 'while' . '(' Expr ')' ':' '{' ListDecl '}'    (rule 30)

	'('            shift, and enter state 55


State 33

	Decl -> RoutineDecl .                               (rule 27)

	';'            reduce using rule 27
	'}'            reduce using rule 27
	%eof           reduce using rule 27


State 34

	%start_pDecl -> Decl .                              (rule 5)

	%eof           accept


State 35

	Decl -> Statement .                                 (rule 26)

	';'            reduce using rule 26
	'}'            reduce using rule 26
	%eof           reduce using rule 26


State 36

	RoutineDecl -> 'def' . Ident '(' ListIdent ')' ':' '{' ListDecl '}'    (rule 15)

	L_Ident        shift, and enter state 13

	Ident          goto state 54

State 37

	Decl -> 'return' . Expr                             (rule 25)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 53

State 38

	ListIdent -> Ident .                                (rule 23)
	ListIdent -> Ident . ',' ListIdent                  (rule 24)

	')'            reduce using rule 23
	','            shift, and enter state 52
	%eof           reduce using rule 23


State 39

	%start_pListIdent -> ListIdent .                    (rule 4)

	%eof           accept


State 40

	%start_pListExpr -> ListExpr .                      (rule 3)

	%eof           accept


State 41

	ListExpr -> Expr .                                  (rule 20)
	ListExpr -> Expr . ',' ListExpr                     (rule 21)
	Expr -> Expr . 'and' Expr1                          (rule 45)
	Expr -> Expr . 'or' Expr1                           (rule 46)
	Expr -> Expr . 'xor' Expr1                          (rule 47)

	')'            reduce using rule 20
	','            shift, and enter state 48
	'and'          shift, and enter state 49
	'or'           shift, and enter state 50
	'xor'          shift, and enter state 51
	%eof           reduce using rule 20


State 42

	%start_pListDecl -> ListDecl .                      (rule 2)

	%eof           accept


State 43

	ListDecl -> Decl .                                  (rule 17)
	ListDecl -> Decl . ';' ListDecl                     (rule 18)

	';'            shift, and enter state 47
	'}'            reduce using rule 17
	%eof           reduce using rule 17


State 44

	%start_pRoutineDecl -> RoutineDecl .                (rule 1)

	%eof           accept


State 45

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 46

	Program -> ListDecl .                               (rule 14)

	%eof           reduce using rule 14


State 47

	ListDecl -> Decl ';' . ListDecl                     (rule 18)

	'def'          shift, and enter state 36
	'for'          shift, and enter state 30
	'if'           shift, and enter state 31
	'return'       shift, and enter state 37
	'while'        shift, and enter state 32
	'}'            reduce using rule 16
	L_Ident        shift, and enter state 13
	%eof           reduce using rule 16

	Ident          goto state 28
	RoutineDecl    goto state 33
	ListDecl       goto state 84
	Decl           goto state 43
	Statement      goto state 35

State 48

	ListExpr -> Expr ',' . ListExpr                     (rule 21)

	'('            shift, and enter state 18
	')'            reduce using rule 19
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20
	%eof           reduce using rule 19

	Ident          goto state 14
	Integer        goto state 15
	ListExpr       goto state 83
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 41

State 49

	Expr -> Expr 'and' . Expr1                          (rule 45)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 82

State 50

	Expr -> Expr 'or' . Expr1                           (rule 46)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 81

State 51

	Expr -> Expr 'xor' . Expr1                          (rule 47)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 80

State 52

	ListIdent -> Ident ',' . ListIdent                  (rule 24)

	')'            reduce using rule 22
	L_Ident        shift, and enter state 13
	%eof           reduce using rule 22

	Ident          goto state 38
	ListIdent      goto state 79

State 53

	Decl -> 'return' Expr .                             (rule 25)
	Expr -> Expr . 'and' Expr1                          (rule 45)
	Expr -> Expr . 'or' Expr1                           (rule 46)
	Expr -> Expr . 'xor' Expr1                          (rule 47)

	';'            reduce using rule 25
	'and'          shift, and enter state 49
	'or'           shift, and enter state 50
	'xor'          shift, and enter state 51
	'}'            reduce using rule 25
	%eof           reduce using rule 25


State 54

	RoutineDecl -> 'def' Ident . '(' ListIdent ')' ':' '{' ListDecl '}'    (rule 15)

	'('            shift, and enter state 78


State 55

	Statement -> 'while' '(' . Expr ')' ':' '{' ListDecl '}'    (rule 30)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 77

State 56

	Statement -> 'if' '(' . Expr ')' ':' '{' ListDecl '}'    (rule 32)
	Statement -> 'if' '(' . Expr ')' ':' '{' ListDecl '}' 'else' ':' '{' ListDecl '}'    (rule 33)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 76

State 57

	Statement -> 'for' '(' . Ident 'in' 'range' '(' Expr ',' Expr ')' ')' ':' '{' ListDecl '}'    (rule 31)

	L_Ident        shift, and enter state 13

	Ident          goto state 75

State 58

	Statement -> Ident '(' . ListExpr ')'               (rule 29)

	'('            shift, and enter state 18
	')'            reduce using rule 19
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	ListExpr       goto state 74
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 41

State 59

	Statement -> Ident '=' . Expr                       (rule 28)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 73

State 60

	Expr2 -> Expr2 '%' . Expr3                          (rule 40)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 72

State 61

	Expr2 -> Expr2 '*' . Expr3                          (rule 38)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 71

State 62

	Expr2 -> Expr2 '/' . Expr3                          (rule 39)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 70

State 63

	Expr1 -> Expr1 '+' . Expr2                          (rule 42)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 21
	Expr2          goto state 69

State 64

	Expr1 -> Expr1 '-' . Expr2                          (rule 43)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 21
	Expr2          goto state 68

State 65

	Expr3 -> 'not' Expr4 .                              (rule 36)

	'%'            reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'/'            reduce using rule 36
	';'            reduce using rule 36
	'and'          reduce using rule 36
	'or'           reduce using rule 36
	'xor'          reduce using rule 36
	'}'            reduce using rule 36
	%eof           reduce using rule 36


State 66

	Expr3 -> '(' Expr . ')'                             (rule 37)
	Expr -> Expr . 'and' Expr1                          (rule 45)
	Expr -> Expr . 'or' Expr1                           (rule 46)
	Expr -> Expr . 'xor' Expr1                          (rule 47)

	')'            shift, and enter state 67
	'and'          shift, and enter state 49
	'or'           shift, and enter state 50
	'xor'          shift, and enter state 51


State 67

	Expr3 -> '(' Expr ')' .                             (rule 37)

	'%'            reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'and'          reduce using rule 37
	'or'           reduce using rule 37
	'xor'          reduce using rule 37
	'}'            reduce using rule 37
	%eof           reduce using rule 37


State 68

	Expr2 -> Expr2 . '*' Expr3                          (rule 38)
	Expr2 -> Expr2 . '/' Expr3                          (rule 39)
	Expr2 -> Expr2 . '%' Expr3                          (rule 40)
	Expr1 -> Expr1 '-' Expr2 .                          (rule 43)

	'%'            shift, and enter state 60
	')'            reduce using rule 43
	'*'            shift, and enter state 61
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            shift, and enter state 62
	';'            reduce using rule 43
	'and'          reduce using rule 43
	'or'           reduce using rule 43
	'xor'          reduce using rule 43
	'}'            reduce using rule 43
	%eof           reduce using rule 43


State 69

	Expr2 -> Expr2 . '*' Expr3                          (rule 38)
	Expr2 -> Expr2 . '/' Expr3                          (rule 39)
	Expr2 -> Expr2 . '%' Expr3                          (rule 40)
	Expr1 -> Expr1 '+' Expr2 .                          (rule 42)

	'%'            shift, and enter state 60
	')'            reduce using rule 42
	'*'            shift, and enter state 61
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            shift, and enter state 62
	';'            reduce using rule 42
	'and'          reduce using rule 42
	'or'           reduce using rule 42
	'xor'          reduce using rule 42
	'}'            reduce using rule 42
	%eof           reduce using rule 42


State 70

	Expr2 -> Expr2 '/' Expr3 .                          (rule 39)

	'%'            reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'and'          reduce using rule 39
	'or'           reduce using rule 39
	'xor'          reduce using rule 39
	'}'            reduce using rule 39
	%eof           reduce using rule 39


State 71

	Expr2 -> Expr2 '*' Expr3 .                          (rule 38)

	'%'            reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'and'          reduce using rule 38
	'or'           reduce using rule 38
	'xor'          reduce using rule 38
	'}'            reduce using rule 38
	%eof           reduce using rule 38


State 72

	Expr2 -> Expr2 '%' Expr3 .                          (rule 40)

	'%'            reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'and'          reduce using rule 40
	'or'           reduce using rule 40
	'xor'          reduce using rule 40
	'}'            reduce using rule 40
	%eof           reduce using rule 40


State 73

	Statement -> Ident '=' Expr .                       (rule 28)
	Expr -> Expr . 'and' Expr1                          (rule 45)
	Expr -> Expr . 'or' Expr1                           (rule 46)
	Expr -> Expr . 'xor' Expr1                          (rule 47)

	';'            reduce using rule 28
	'and'          shift, and enter state 49
	'or'           shift, and enter state 50
	'xor'          shift, and enter state 51
	'}'            reduce using rule 28
	%eof           reduce using rule 28


State 74

	Statement -> Ident '(' ListExpr . ')'               (rule 29)

	')'            shift, and enter state 89


State 75

	Statement -> 'for' '(' Ident . 'in' 'range' '(' Expr ',' Expr ')' ')' ':' '{' ListDecl '}'    (rule 31)

	'in'           shift, and enter state 88


State 76

	Statement -> 'if' '(' Expr . ')' ':' '{' ListDecl '}'    (rule 32)
	Statement -> 'if' '(' Expr . ')' ':' '{' ListDecl '}' 'else' ':' '{' ListDecl '}'    (rule 33)
	Expr -> Expr . 'and' Expr1                          (rule 45)
	Expr -> Expr . 'or' Expr1                           (rule 46)
	Expr -> Expr . 'xor' Expr1                          (rule 47)

	')'            shift, and enter state 87
	'and'          shift, and enter state 49
	'or'           shift, and enter state 50
	'xor'          shift, and enter state 51


State 77

	Statement -> 'while' '(' Expr . ')' ':' '{' ListDecl '}'    (rule 30)
	Expr -> Expr . 'and' Expr1                          (rule 45)
	Expr -> Expr . 'or' Expr1                           (rule 46)
	Expr -> Expr . 'xor' Expr1                          (rule 47)

	')'            shift, and enter state 86
	'and'          shift, and enter state 49
	'or'           shift, and enter state 50
	'xor'          shift, and enter state 51


State 78

	RoutineDecl -> 'def' Ident '(' . ListIdent ')' ':' '{' ListDecl '}'    (rule 15)

	')'            reduce using rule 22
	L_Ident        shift, and enter state 13

	Ident          goto state 38
	ListIdent      goto state 85

State 79

	ListIdent -> Ident ',' ListIdent .                  (rule 24)

	')'            reduce using rule 24
	%eof           reduce using rule 24


State 80

	Expr1 -> Expr1 . '+' Expr2                          (rule 42)
	Expr1 -> Expr1 . '-' Expr2                          (rule 43)
	Expr -> Expr 'xor' Expr1 .                          (rule 47)

	')'            reduce using rule 47
	'+'            shift, and enter state 63
	','            reduce using rule 47
	'-'            shift, and enter state 64
	';'            reduce using rule 47
	'and'          reduce using rule 47
	'or'           reduce using rule 47
	'xor'          reduce using rule 47
	'}'            reduce using rule 47
	%eof           reduce using rule 47


State 81

	Expr1 -> Expr1 . '+' Expr2                          (rule 42)
	Expr1 -> Expr1 . '-' Expr2                          (rule 43)
	Expr -> Expr 'or' Expr1 .                           (rule 46)

	')'            reduce using rule 46
	'+'            shift, and enter state 63
	','            reduce using rule 46
	'-'            shift, and enter state 64
	';'            reduce using rule 46
	'and'          reduce using rule 46
	'or'           reduce using rule 46
	'xor'          reduce using rule 46
	'}'            reduce using rule 46
	%eof           reduce using rule 46


State 82

	Expr1 -> Expr1 . '+' Expr2                          (rule 42)
	Expr1 -> Expr1 . '-' Expr2                          (rule 43)
	Expr -> Expr 'and' Expr1 .                          (rule 45)

	')'            reduce using rule 45
	'+'            shift, and enter state 63
	','            reduce using rule 45
	'-'            shift, and enter state 64
	';'            reduce using rule 45
	'and'          reduce using rule 45
	'or'           reduce using rule 45
	'xor'          reduce using rule 45
	'}'            reduce using rule 45
	%eof           reduce using rule 45


State 83

	ListExpr -> Expr ',' ListExpr .                     (rule 21)

	')'            reduce using rule 21
	%eof           reduce using rule 21


State 84

	ListDecl -> Decl ';' ListDecl .                     (rule 18)

	'}'            reduce using rule 18
	%eof           reduce using rule 18


State 85

	RoutineDecl -> 'def' Ident '(' ListIdent . ')' ':' '{' ListDecl '}'    (rule 15)

	')'            shift, and enter state 93


State 86

	Statement -> 'while' '(' Expr ')' . ':' '{' ListDecl '}'    (rule 30)

	':'            shift, and enter state 92


State 87

	Statement -> 'if' '(' Expr ')' . ':' '{' ListDecl '}'    (rule 32)
	Statement -> 'if' '(' Expr ')' . ':' '{' ListDecl '}' 'else' ':' '{' ListDecl '}'    (rule 33)

	':'            shift, and enter state 91


State 88

	Statement -> 'for' '(' Ident 'in' . 'range' '(' Expr ',' Expr ')' ')' ':' '{' ListDecl '}'    (rule 31)

	'range'        shift, and enter state 90


State 89

	Statement -> Ident '(' ListExpr ')' .               (rule 29)

	';'            reduce using rule 29
	'}'            reduce using rule 29
	%eof           reduce using rule 29


State 90

	Statement -> 'for' '(' Ident 'in' 'range' . '(' Expr ',' Expr ')' ')' ':' '{' ListDecl '}'    (rule 31)

	'('            shift, and enter state 97


State 91

	Statement -> 'if' '(' Expr ')' ':' . '{' ListDecl '}'    (rule 32)
	Statement -> 'if' '(' Expr ')' ':' . '{' ListDecl '}' 'else' ':' '{' ListDecl '}'    (rule 33)

	'{'            shift, and enter state 96


State 92

	Statement -> 'while' '(' Expr ')' ':' . '{' ListDecl '}'    (rule 30)

	'{'            shift, and enter state 95


State 93

	RoutineDecl -> 'def' Ident '(' ListIdent ')' . ':' '{' ListDecl '}'    (rule 15)

	':'            shift, and enter state 94


State 94

	RoutineDecl -> 'def' Ident '(' ListIdent ')' ':' . '{' ListDecl '}'    (rule 15)

	'{'            shift, and enter state 101


State 95

	Statement -> 'while' '(' Expr ')' ':' '{' . ListDecl '}'    (rule 30)

	'def'          shift, and enter state 36
	'for'          shift, and enter state 30
	'if'           shift, and enter state 31
	'return'       shift, and enter state 37
	'while'        shift, and enter state 32
	'}'            reduce using rule 16
	L_Ident        shift, and enter state 13

	Ident          goto state 28
	RoutineDecl    goto state 33
	ListDecl       goto state 100
	Decl           goto state 43
	Statement      goto state 35

State 96

	Statement -> 'if' '(' Expr ')' ':' '{' . ListDecl '}'    (rule 32)
	Statement -> 'if' '(' Expr ')' ':' '{' . ListDecl '}' 'else' ':' '{' ListDecl '}'    (rule 33)

	'def'          shift, and enter state 36
	'for'          shift, and enter state 30
	'if'           shift, and enter state 31
	'return'       shift, and enter state 37
	'while'        shift, and enter state 32
	'}'            reduce using rule 16
	L_Ident        shift, and enter state 13

	Ident          goto state 28
	RoutineDecl    goto state 33
	ListDecl       goto state 99
	Decl           goto state 43
	Statement      goto state 35

State 97

	Statement -> 'for' '(' Ident 'in' 'range' '(' . Expr ',' Expr ')' ')' ':' '{' ListDecl '}'    (rule 31)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 98

State 98

	Statement -> 'for' '(' Ident 'in' 'range' '(' Expr . ',' Expr ')' ')' ':' '{' ListDecl '}'    (rule 31)
	Expr -> Expr . 'and' Expr1                          (rule 45)
	Expr -> Expr . 'or' Expr1                           (rule 46)
	Expr -> Expr . 'xor' Expr1                          (rule 47)

	','            shift, and enter state 105
	'and'          shift, and enter state 49
	'or'           shift, and enter state 50
	'xor'          shift, and enter state 51


State 99

	Statement -> 'if' '(' Expr ')' ':' '{' ListDecl . '}'    (rule 32)
	Statement -> 'if' '(' Expr ')' ':' '{' ListDecl . '}' 'else' ':' '{' ListDecl '}'    (rule 33)

	'}'            shift, and enter state 104


State 100

	Statement -> 'while' '(' Expr ')' ':' '{' ListDecl . '}'    (rule 30)

	'}'            shift, and enter state 103


State 101

	RoutineDecl -> 'def' Ident '(' ListIdent ')' ':' '{' . ListDecl '}'    (rule 15)

	'def'          shift, and enter state 36
	'for'          shift, and enter state 30
	'if'           shift, and enter state 31
	'return'       shift, and enter state 37
	'while'        shift, and enter state 32
	'}'            reduce using rule 16
	L_Ident        shift, and enter state 13

	Ident          goto state 28
	RoutineDecl    goto state 33
	ListDecl       goto state 102
	Decl           goto state 43
	Statement      goto state 35

State 102

	RoutineDecl -> 'def' Ident '(' ListIdent ')' ':' '{' ListDecl . '}'    (rule 15)

	'}'            shift, and enter state 108


State 103

	Statement -> 'while' '(' Expr ')' ':' '{' ListDecl '}' .    (rule 30)

	';'            reduce using rule 30
	'}'            reduce using rule 30
	%eof           reduce using rule 30


State 104

	Statement -> 'if' '(' Expr ')' ':' '{' ListDecl '}' .    (rule 32)
	Statement -> 'if' '(' Expr ')' ':' '{' ListDecl '}' . 'else' ':' '{' ListDecl '}'    (rule 33)

	';'            reduce using rule 32
	'else'         shift, and enter state 107
	'}'            reduce using rule 32
	%eof           reduce using rule 32


State 105

	Statement -> 'for' '(' Ident 'in' 'range' '(' Expr ',' . Expr ')' ')' ':' '{' ListDecl '}'    (rule 31)

	'('            shift, and enter state 18
	'not'          shift, and enter state 19
	L_Ident        shift, and enter state 13
	L_integ        shift, and enter state 20

	Ident          goto state 14
	Integer        goto state 15
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 106

State 106

	Statement -> 'for' '(' Ident 'in' 'range' '(' Expr ',' Expr . ')' ')' ':' '{' ListDecl '}'    (rule 31)
	Expr -> Expr . 'and' Expr1                          (rule 45)
	Expr -> Expr . 'or' Expr1                           (rule 46)
	Expr -> Expr . 'xor' Expr1                          (rule 47)

	')'            shift, and enter state 110
	'and'          shift, and enter state 49
	'or'           shift, and enter state 50
	'xor'          shift, and enter state 51


State 107

	Statement -> 'if' '(' Expr ')' ':' '{' ListDecl '}' 'else' . ':' '{' ListDecl '}'    (rule 33)

	':'            shift, and enter state 109


State 108

	RoutineDecl -> 'def' Ident '(' ListIdent ')' ':' '{' ListDecl '}' .    (rule 15)

	';'            reduce using rule 15
	'}'            reduce using rule 15
	%eof           reduce using rule 15


State 109

	Statement -> 'if' '(' Expr ')' ':' '{' ListDecl '}' 'else' ':' . '{' ListDecl '}'    (rule 33)

	'{'            shift, and enter state 112


State 110

	Statement -> 'for' '(' Ident 'in' 'range' '(' Expr ',' Expr ')' . ')' ':' '{' ListDecl '}'    (rule 31)

	')'            shift, and enter state 111


State 111

	Statement -> 'for' '(' Ident 'in' 'range' '(' Expr ',' Expr ')' ')' . ':' '{' ListDecl '}'    (rule 31)

	':'            shift, and enter state 114


State 112

	Statement -> 'if' '(' Expr ')' ':' '{' ListDecl '}' 'else' ':' '{' . ListDecl '}'    (rule 33)

	'def'          shift, and enter state 36
	'for'          shift, and enter state 30
	'if'           shift, and enter state 31
	'return'       shift, and enter state 37
	'while'        shift, and enter state 32
	'}'            reduce using rule 16
	L_Ident        shift, and enter state 13

	Ident          goto state 28
	RoutineDecl    goto state 33
	ListDecl       goto state 113
	Decl           goto state 43
	Statement      goto state 35

State 113

	Statement -> 'if' '(' Expr ')' ':' '{' ListDecl '}' 'else' ':' '{' ListDecl . '}'    (rule 33)

	'}'            shift, and enter state 116


State 114

	Statement -> 'for' '(' Ident 'in' 'range' '(' Expr ',' Expr ')' ')' ':' . '{' ListDecl '}'    (rule 31)

	'{'            shift, and enter state 115


State 115

	Statement -> 'for' '(' Ident 'in' 'range' '(' Expr ',' Expr ')' ')' ':' '{' . ListDecl '}'    (rule 31)

	'def'          shift, and enter state 36
	'for'          shift, and enter state 30
	'if'           shift, and enter state 31
	'return'       shift, and enter state 37
	'while'        shift, and enter state 32
	'}'            reduce using rule 16
	L_Ident        shift, and enter state 13

	Ident          goto state 28
	RoutineDecl    goto state 33
	ListDecl       goto state 117
	Decl           goto state 43
	Statement      goto state 35

State 116

	Statement -> 'if' '(' Expr ')' ':' '{' ListDecl '}' 'else' ':' '{' ListDecl '}' .    (rule 33)

	';'            reduce using rule 33
	'}'            reduce using rule 33
	%eof           reduce using rule 33


State 117

	Statement -> 'for' '(' Ident 'in' 'range' '(' Expr ',' Expr ')' ')' ':' '{' ListDecl . '}'    (rule 31)

	'}'            shift, and enter state 118


State 118

	Statement -> 'for' '(' Ident 'in' 'range' '(' Expr ',' Expr ')' ')' ':' '{' ListDecl '}' .    (rule 31)

	';'            reduce using rule 31
	'}'            reduce using rule 31
	%eof           reduce using rule 31


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 50
Number of terminals: 27
Number of non-terminals: 26
Number of states: 119
